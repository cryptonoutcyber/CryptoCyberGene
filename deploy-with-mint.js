const web3 = require('@solana/web3.js');
require('dotenv').config(); const spl = require('@solana/spl-token'); async function deployWithPredeterminedMint() { console.log('?? OMEGA PRIME DEPLOYMENT WITH PREDETERMINED MINT'); console.log('Target Mint Address: 4eJZVbbsiLAG6EkWvgEYEWKEpdhJPFBYMeJ6DBX98w6a'); const connection = new web3.Connection('${process.env.HELIUS_API_KEY ? `https://mainnet.helius-rpc.com/?api-key=${process.env.HELIUS_API_KEY}` : (process.env.RPC_URL || "https://api.mainnet-beta.solana.com")}`', 'confirmed'); const targetMint = new web3.PublicKey(process.env.TARGET_WALLET_ADDRESS); const recipientWallet = new web3.PublicKey(process.env.SOURCE_WALLET_ADDRESS); console.log('=== DEPLOYMENT CONFIGURATION ==='); console.log('?? Mint Address:', targetMint.toBase58()); console.log('?? Recipient Wallet:', recipientWallet.toBase58()); console.log('?? Network: MAINNET-BETA'); console.log('?? Token Amount: 1,000,000,000 OMEGA'); console.log('?? Decimals: 9'); console.log('\\n??  TO COMPLETE DEPLOYMENT:'); console.log('1. You need the private key for the mint address'); console.log('2. You need a funded wallet as the payer'); console.log('3. Minimum 0.02 SOL required for deployment'); console.log('\\n=== DEPLOYMENT STEPS ==='); console.log('Step 1: Create the mint account at predetermined address'); console.log('Step 2: Initialize mint with 9 decimals'); console.log('Step 3: Create token account for recipient'); console.log('Step 4: Mint 1 billion tokens to recipient'); const payer = web3.Keypair.generate(); console.log('\\n?? GENERATED PAYER (REPLACE WITH YOUR KEYPAIR):'); console.log('Public Key:', payer.publicKey.toBase58()); console.log('\\n?? NEXT STEPS:'); console.log('1. Replace payer keypair with your funded mainnet wallet'); console.log('2. Generate or provide the keypair for mint address'); console.log('3. Run deployment to mainnet'); console.log('\\n?? DEPLOYMENT SCRIPT READY'); console.log('Mint will be created at:', targetMint.toBase58()); console.log('Tokens will be minted to:', recipientWallet.toBase58()); } deployWithPredeterminedMint().catch(console.error);
