const web3 = require('@solana/web3.js');
require('dotenv').config(); async function analyzeAddress() { console.log('?? ANALYZING ADDRESS: 9HUvuQHBHkihcrhiucdYFjk1q4jUgozakoYsubYrHiJS'); const address = '9HUvuQHBHkihcrhiucdYFjk1q4jUgozakoYsubYrHiJS'; const mainnet = new web3.Connection('${process.env.HELIUS_API_KEY ? `https://mainnet.helius-rpc.com/?api-key=${process.env.HELIUS_API_KEY}` : (process.env.RPC_URL || "https://api.mainnet-beta.solana.com")}`'); const devnet = new web3.Connection('https://api.devnet.solana.com'); const publicKey = new web3.PublicKey(address); console.log('=== NETWORK DETECTION ==='); const mainnetInfo = await mainnet.getAccountInfo(publicKey); const devnetInfo = await devnet.getAccountInfo(publicKey); if (mainnetInfo) { console.log('? MAINNET: FOUND'); console.log('Owner:', mainnetInfo.owner.toBase58()); console.log('SOL Balance:', mainnetInfo.lamports / 1e9); console.log('Data Size:', mainnetInfo.data.length, 'bytes'); console.log('Executable:', mainnetInfo.executable); if (mainnetInfo.data.length === 82) { console.log('?? TOKEN MINT DETECTED'); const mintAuth = mainnetInfo.data[0] === 1 ? new web3.PublicKey(mainnetInfo.data.slice(4, 36)).toBase58() : 'NULL'; const supply = mainnetInfo.data.readBigUInt64LE(36); const decimals = mainnetInfo.data[44]; const freezeAuth = mainnetInfo.data[46] === 1 ? new web3.PublicKey(mainnetInfo.data.slice(47, 79)).toBase58() : 'NULL'; console.log('Mint Authority:', mintAuth); console.log('Supply:', supply.toString()); console.log('Decimals:', decimals); console.log('Freeze Authority:', freezeAuth); } const sigs = await mainnet.getSignaturesForAddress(publicKey, {limit: 3}); console.log('Recent Transactions:', sigs.length); sigs.forEach((s, i) => console.log((i+1) + '. ' + s.signature.substring(0, 15) + '...')); } else { console.log('? MAINNET: NOT FOUND'); } if (devnetInfo) { console.log('? DEVNET: FOUND (Balance:', devnetInfo.lamports / 1e9, 'SOL)'); } else { console.log('? DEVNET: NOT FOUND'); } console.log('?? Analysis Cost: FREE'); } analyzeAddress().catch(console.error);
