const web3 = require('@solana/web3.js');
require('dotenv').config(); async function analyzeMintController() { console.log('?? ANALYZING MINT/CONTROLLER: 4eJZVbbsiLAG6EkWvgEYEWKEpdhJPFBYMeJ6DBX98w6a'); const address = process.env.TARGET_WALLET_ADDRESS; const mainnet = new web3.Connection('${process.env.HELIUS_API_KEY ? `https://mainnet.helius-rpc.com/?api-key=${process.env.HELIUS_API_KEY}` : (process.env.RPC_URL || "https://api.mainnet-beta.solana.com")}`'); const devnet = new web3.Connection('https://api.devnet.solana.com'); const publicKey = new web3.PublicKey(address); console.log('=== ANALYZING FOR MINT/CONTROLLER ROLE ==='); let info = await mainnet.getAccountInfo(publicKey); let network = 'mainnet'; if (!info) { info = await devnet.getAccountInfo(publicKey); network = 'devnet'; } if (!info) { console.log('? Address not found on any network'); return; } console.log('? Found on:', network.toUpperCase()); console.log('Owner Program:', info.owner.toBase58()); console.log('Data Size:', info.data.length, 'bytes'); console.log('SOL Balance:', info.lamports / 1e9); console.log('Executable:', info.executable); if (info.owner.toBase58() === 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA' || info.owner.toBase58() === 'TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb') { console.log('\\n?? EXISTING TOKEN MINT DETECTED!'); if (info.data.length >= 82) { const mintAuthPresent = info.data[0]; if (mintAuthPresent === 1) { const mintAuth = new web3.PublicKey(info.data.slice(4, 36)); console.log('?? Current Mint Authority:', mintAuth.toBase58()); } else { console.log('?? Mint Authority: RENOUNCED (NULL)'); } const supply = info.data.readBigUInt64LE(36); const decimals = info.data[44]; console.log('?? Current Supply:', supply.toString()); console.log('?? Decimals:', decimals); const freezeAuthPresent = info.data[46]; if (freezeAuthPresent === 1) { const freezeAuth = new web3.PublicKey(info.data.slice(47, 79)); console.log('??  Freeze Authority:', freezeAuth.toBase58()); } else { console.log('??  Freeze Authority: NULL'); } console.log('\\n??  IMPORTANT: This is an EXISTING token mint!'); console.log('Cannot use as new mint address - already exists'); console.log('Can use as target for minting if you control mint authority'); } } else if (info.executable) { console.log('\\n???  PROGRAM/CONTRACT DETECTED'); console.log('Type: Executable Program'); console.log('Can be used as controller/authority for new tokens'); } else { console.log('\\n?? STANDARD ACCOUNT'); console.log('Type: Regular wallet/account'); console.log('Balance:', info.lamports / 1e9, 'SOL'); console.log('Can be used as: Authority, recipient, or controller'); } console.log('\\n=== RECOMMENDATION ==='); if (info.owner.toBase58().includes('Token')) { console.log('?? USE AS: Existing mint (mint additional tokens)'); console.log('? ROLE: Target mint address'); } else if (info.executable) { console.log('?? USE AS: Controller program'); console.log('? ROLE: Authority/controller contract'); } else { console.log('?? USE AS: Authority or recipient'); console.log('? ROLE: Mint authority or token recipient'); } console.log('?? Analysis Cost: FREE'); } analyzeMintController().catch(console.error);
